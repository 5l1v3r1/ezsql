<?php
require_once('ez_sql_loader.php');

require 'vendor/autoload.php';
use PHPUnit\Framework\TestCase;
use PHPUnit\DbUnit\TestCaseTrait;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2018-02-27 at 20:37:45.
 */
class ezSQLcoreTest extends TestCase
{
    use TestCaseTrait;
    /**
     * @var ezSQLcore
     */
    protected $object;

    /**
     * only instantiate pdo once for test clean-up/fixture load
     * @var PDO
     */
    static private $pdo = null;

    /**
     * only instantiate PHPUnit_Extensions_Database_DB_IDatabaseConnection once per test
     * @var type 
     */
    private $conn = null;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ezSQLcore;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    public function getConnection()
    {
        $database = 'testing_database';
        $dbuser = 'root';
        $dbpassword = '';
        if ($this->conn === null) {
            if (self::$pdo == null) {
                self::$pdo = new PDO("mysql:dbname=".$database.";host=localhost", $dbuser, $dbpassword);
            }
            $this->conn = $this->createDefaultDBConnection(self::$pdo, 'ezsql_testing');
        }
        return $this->conn;
    }

    public function getDataSet()
    {
        return $this->createMySQLXMLDataSet(__DIR__ . '/datapump.xml');
    }
    
    /**
     * This is here to ensure that the database is working correctly
     */
    public function testDataBaseConnection()
    {
        
        $this->getConnection()->createDataSet(array('products'));
        $prod = $this->getDataSet();
        $queryTable = $this->getConnection()->createQueryTable(
            'products', 'SELECT * FROM products'
        );
        $expectedTable = $this->getDataSet()->getTable('products');
        //Here we check that the table in the database matches the data in the XML file
        $this->assertTablesEqual($expectedTable, $queryTable);
    }

    /**
     * @covers ezSQLcore::get_host_port
     * @todo   Implement testGet_host_port().
     */
    public function testGet_host_port()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::register_error
     * @todo   Implement testRegister_error().
     */
    public function testRegister_error()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::show_errors
     * @todo   Implement testShow_errors().
     */
    public function testShow_errors()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::hide_errors
     * @todo   Implement testHide_errors().
     */
    public function testHide_errors()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::flush
     * @todo   Implement testFlush().
     */
    public function testFlush()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_var
     * @todo   Implement testGet_var().
     */
    public function testGet_var()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_row
     * @todo   Implement testGet_row().
     */
    public function testGet_row()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_col
     * @todo   Implement testGet_col().
     */
    public function testGet_col()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_results
     * @todo   Implement testGet_results().
     */
    public function testGet_results()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_col_info
     * @todo   Implement testGet_col_info().
     */
    public function testGet_col_info()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::store_cache
     * @todo   Implement testStore_cache().
     */
    public function testStore_cache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_cache
     * @todo   Implement testGet_cache().
     */
    public function testGet_cache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::vardump
     * @todo   Implement testVardump().
     */
    public function testVardump()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::dumpvar
     * @todo   Implement testDumpvar().
     */
    public function testDumpvar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::debug
     * @todo   Implement testDebug().
     */
    public function testDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::donation
     * @todo   Implement testDonation().
     */
    public function testDonation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::timer_get_cur
     * @todo   Implement testTimer_get_cur().
     */
    public function testTimer_get_cur()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::timer_start
     * @todo   Implement testTimer_start().
     */
    public function testTimer_start()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::timer_elapsed
     * @todo   Implement testTimer_elapsed().
     */
    public function testTimer_elapsed()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::timer_update_global
     * @todo   Implement testTimer_update_global().
     */
    public function testTimer_update_global()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::get_set
     * @todo   Implement testGet_set().
     */
    public function testGet_set()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ezSQLcore::count
     * @todo   Implement testCount().
     */
    public function testCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
