build: false
platform:
  - x64
clone_folder: c:\projects\php-project-workspace

## Build matrix for lowest and highest possible targets
environment:
  matrix:
  - dependencies: lowest
    php_ver_target: 7.0
  - dependencies: current
    php_ver_target: 7.1
  - dependencies: highest
    php_ver_target: 7.2
  MYSQL_DATABASE: ez_test
  MYSQL_HOST: localhost
  MYSQL_USER: root
  MYSQL_PASSWORD: Password12!
  MYSQL_PATH: C:\Program Files\MySQL\MySQL Server 5.7
  
services:
    - mssql2014
    - mysql
    - postgresql
    
## Cache composer, chocolatey and php bits
cache:
    - '%LOCALAPPDATA%\Composer\files -> composer.lock'
    - composer.phar
    # Cache chocolatey packages
    - C:\ProgramData\chocolatey\bin -> .appveyor.yml
    - C:\ProgramData\chocolatey\lib -> .appveyor.yml
    # Cache php install
    - c:\tools\php -> .appveyor.yml
    
## Set up environment variables
init:
    - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;C:\Program Files\PostgreSQL\9.4\bin\;%PATH%
    - SET COMPOSER_NO_INTERACTION=1
    - SET PHP=1 # This var is connected to PHP install cache
    - SET ANSICON=121x90 (121x90)
    
## Install PHP and composer, and run the appropriate composer command
install:
    - IF EXIST c:\tools\php (SET PHP=0) # Checks for the PHP install being cached
    - ps: appveyor-retry cinst --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
    - appveyor-retry appveyor DownloadFile https://xdebug.org/files/php_xdebug-2.6.0-7.2-vc15-x86_64.dll -FileName c:\tools\php\ext\php_xdebug-2.6.0-7.2-vc15-x86_64.dll
    - cd c:\tools\php
    - IF %PHP%==1 copy php.ini-production php.ini /Y
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
    - IF %PHP%==1 echo extension=php_odbc.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mysqli.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_mysql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_odbc.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_sqlite.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_sqlite3.dll >> php.ini
    - IF %PHP%==1 echo [xdebug] >> php.ini
    - IF %PHP%==1 echo zend_extension=php_xdebug-2.6.0-7.2-vc15-x86_64.dll >> php.ini
    - IF %PHP%==1 echo zend.assertions=1 >> php.ini
    - IF %PHP%==1 echo assert.exception=On >> php.ini
    - IF %PHP%==1 echo xdebug.remote_enable=1 >> php.ini
    - IF %PHP%==1 echo xdebug.remote_autostart=1 >> php.ini
    - IF %PHP%==1 echo xdebug.profiler_enable=off >> php.ini
    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
    - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
    - cd c:\projects\php-project-workspace
    - IF %dependencies%==lowest appveyor-retry composer update --no-progress --profile -n
    - IF %dependencies%==current appveyor-retry composer install --no-progress --profile -n
    - IF %dependencies%==highest appveyor-retry composer update --no-progress --profile -n
    # Get the MSSQL DLL's
    - ps: >-
        $source = "https://github.com/Microsoft/msphpsql/releases/download/v5.2.0/Windows-7.2.zip"
        $destination = "c:\tools\php\php-sqlsrv.zip"
        Invoke-WebRequest $source -OutFile $destination
        #appveyor-retry appveyor DownloadFile https://github.com/Microsoft/msphpsql/releases/download/v5.2.0/Windows-7.2.zip
        7z x php-sqlsrv.zip > $null
        copy Windows-7.2\x64\php_sqlsrv_72_nts.dll ext\php_sqlsrv.dll
        copy Windows-7.2\x64\php_pdo_sqlsrv_72_nts.dll ext\php_pdo_sqlsrv.dll
        Add-Content php.ini "`nextension=php_sqlsrv.dll"
        Add-Content php.ini "`nextension=php_pdo_sqlsrv.dll"
        Add-Content php.ini "`n"        
    - composer self-update
    - composer require php-coveralls/php-coveralls
    
build_script:
  # postgres
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - createdb ez_test
  - psql -c "CREATE USER ez_test WITH PASSWORD 'ezTest';"
  # sqlserver
  - sqlcmd -S localhost,1433 -U sa -P Password12! -Q "CREATE DATABASE ez_test"
  - sqlcmd -S localhost,1433 -U sa -P Password12! -d ez_test -Q "CREATE LOGIN ez_test WITH PASSWORD=N'ezTest', DEFAULT_DATABASE=ez_test, CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; ALTER SERVER ROLE [sysadmin] ADD MEMBER ez_test" 
  
before_test:
  - SET PATH=%MYSQL_PATH%\bin;%PATH%
  - mysqladmin --host=%MYSQL_HOST% --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% create %MYSQL_DATABASE%    
  # mysql
  - mysql -u root -p"Password12!" -e "CREATE DATABASE IF NOT EXISTS ez_test;"
  - mysql -u root -p"Password12!" -e "GRANT ALL PRIVILEGES ON ez_test.* TO ez_test@localhost IDENTIFIED BY 'ezTest'";
  - mysql -u root -p"Password12!" -e "FLUSH PRIVILEGES;"
    
on_success:
  - appveyor-retry php vendor/bin/php-coveralls
  
## Run the actual test
test_script:
    - cd c:\projects\php-project-workspace
    - mkdir build\logs
    - vendor/bin/phpunit --coverage-clover build\logs\clover.xml
    